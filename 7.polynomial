 Consider a polynomial addition for two polynomials. Develop and execute a program in C using suitable data
structures to implement the same.
#include <stdio.h>
#include <stdlib.h>
struct Node {
 int coeff;
 int exp;
 struct Node* next;
};
// Function to create a new node
struct Node* createNode(int coeff, int exp) {
 struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
 newNode->coeff = coeff;
 newNode->exp = exp;
 newNode->next = NULL;
 return newNode;
}
// Function to insert a node at the end of the polynomial
void insertTerm(struct Node** poly, int coeff, int exp) {
 struct Node* newNode = createNode(coeff, exp);
 if (*poly == NULL) {
 *poly = newNode;
 } else {
 struct Node* temp = *poly;
 while (temp->next != NULL) {
 temp = temp->next;
 }
 temp->next = newNode;
 }
}
// Function to add two polynomials
struct Node* addPolynomials(struct Node* poly1, struct Node* poly2) {
 struct Node* result = NULL;
 struct Node *temp1 = poly1, *temp2 = poly2;
 while (temp1 != NULL && temp2 != NULL) {
 if (temp1->exp > temp2->exp) {
 insertTerm(&result, temp1->coeff, temp1->exp);
 temp1 = temp1->next;
 } else if (temp1->exp < temp2->exp) {
 insertTerm(&result, temp2->coeff, temp2->exp);
 temp2 = temp2->next;
 } else {
 int sumCoeff = temp1->coeff + temp2->coeff;
 if (sumCoeff != 0) {
 insertTerm(&result, sumCoeff, temp1->exp);
 }
 temp1 = temp1->next;
 temp2 = temp2->next;
 }
 }
 while (temp1 != NULL) {
 insertTerm(&result, temp1->coeff, temp1->exp);
 temp1 = temp1->next;
 }
 while (temp2 != NULL) {
 insertTerm(&result, temp2->coeff, temp2->exp);
 temp2 = temp2->next;
 }
 return result;
}
// Function to print the polynomial
void printPolynomial(struct Node* poly) {
 if (poly == NULL) {
 printf("0");
 return;
 }
 struct Node* temp = poly;
 while (temp != NULL) {
 if (temp->coeff > 0 && temp != poly) {
 printf(" + ");
 }
 printf("%dx^%d", temp->coeff, temp->exp);
 temp = temp->next;
 }
 printf("\n");
}
int main() {
 struct Node *poly1 = NULL, *poly2 = NULL, *result = NULL;
 // Inserting terms into first polynomial: 5x^3 + 4x^2 + 2x + 1
 insertTerm(&poly1, 5, 3);
 insertTerm(&poly1, 4, 2);
 insertTerm(&poly1, 2, 1);
 insertTerm(&poly1, 1, 0);
 // Inserting terms into second polynomial: 3x^3 + 2x^2 + x + 4
 insertTerm(&poly2, 3, 3);
 insertTerm(&poly2, 2, 2);
 insertTerm(&poly2, 1, 1);
 insertTerm(&poly2, 4, 0);
 // Adding the two polynomials
 result = addPolynomials(poly1, poly2);
 // Printing the result
 printf("First Polynomial: ");
 printPolynomial(poly1);
 printf("Second Polynomial: ");
 printPolynomial(poly2);
 printf("Resultant Polynomial: ");
 printPolynomial(result);
 return 0;
}
